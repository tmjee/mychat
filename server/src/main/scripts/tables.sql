-- TABLE USER
DROP SEQUENCE IF EXISTS SEQ_USER;
CREATE SEQUENCE SEQ_USER INCREMENT 1 MINVALUE 1 START 1;
CREATE TABLE IF NOT EXISTS "USER" (
  "USER_ID" INTEGER PRIMARY KEY DEFAULT NEXTVAL('SEQ_USER'),
  "EMAIL" VARCHAR(50) NOT NULL,
  "PASSWORD" VARCHAR(255),
  "STATUS" VARCHAR(10) NOT NULL,
  "CREATION_DATE" TIMESTAMP NOT NULL,
  "MODIFICATION_DATE" TIMESTAMP NOT NULL
);

-- TABLE CHAT
DROP SEQUENCE IF EXISTS SEQ_CHAT;
CREATE SEQUENCE SEQ_CHAT INCREMENT 1 MINVALUE 1 START 1;
CREATE TABLE IF NOT EXISTS "CHAT" (
  "CHAT_ID" INTEGER PRIMARY KEY DEFAULT NEXTVAL('SEQ_CHAT'),
  "CREATOR_USER_ID" INTEGER REFERENCES "USER"("USER_ID"),
  "NAME" VARCHAR(30),
  "CREATION_DATE" TIMESTAMP NOT NULL
);

-- TABLE CHAT_MEMBERS
DROP SEQUENCE IF EXISTS SEQ_CHAT_MEMBER;
CREATE SEQUENCE SEQ_CHAT_MEMBER INCREMENT 1 MINVALUE 1 START 1;
CREATE TABLE IF NOT EXISTS "CHAT_MEMBER" (
  "CHAT_MEMBER_ID" INTEGER PRIMARY KEY DEFAULT NEXTVAL('SEQ_CHAT_MEMBER'),
  "CHAT_MEMBER_USER_ID" INTEGER REFERENCES "USER"("USER_ID"),
  "STATUS" VARCHAR(50) NOT NULL   -- join / left
);

-- TABLE CHAT_MESSAGES
DROP SEQUENCE IF EXISTS SEQ_CHAT_MESSAGE;
CREATE SEQUENCE SEQ_CHAT_MESSAGE INCREMENT 1 MINVALUE 1 START 1;
CREATE TABLE IF NOT EXISTS "CHAT_MESSAGE" (
  "CHAT_MESSAGE_ID" INTEGER PRIMARY KEY DEFAULT NEXTVAL('SEQ_CHAT_MESSAGE'),
  "CHAT_MEMBER_ID" INTEGER REFERENCES "CHAT_MEMBER"("CHAT_MEMBER_ID"),
  "CHAT_MESSAGE" VARCHAR(255) NOT NULL,
  "CREATION_DATE" TIMESTAMP NOT NULL
);


-- TABLE CONTACTS
DROP SEQUENCE IF EXISTS SEQ_CONTACT;
CREATE SEQUENCE SEQ_CONTACT INCREMENT 1 MINVALUE 1 START 1;
CREATE TABLE IF NOT EXISTS "CONTACT" (
  "CONTACT_ID" INTEGER PRIMARY KEY DEFAULT NEXTVAL('SEQ_CONTACT'),
  "USER_ID" INTEGER REFERENCES "USER"("USER_ID"),
  "CONTACT_USER_ID" INTEGER REFERENCES "USER"("USER_ID"),
  "CREATION_DATE" TIMESTAMP NOT NULL
);

-- TABLE PROFILE
DROP SEQUENCE IF EXISTS SEQ_PROFILE;
CREATE SEQUENCE SEQ_PROFILE INCREMENT 1 MINVALUE 1 START 1;
CREATE TABLE IF NOT EXISTS "PROFILE" (
  "PROFILE_ID" INTEGER PRIMARY KEY DEFAULT NEXTVAL('SEQ_PROFILE'),
  "USER_ID" INTEGER REFERENCES  "USER"("USER_ID"),
  "WHATSUP" VARCHAR(255),
  "FULLNAME" VARCHAR(255),
  "GENDER" VARCHAR(10),
  "CREATION_DATE" TIMESTAMP NOT NULL,
  "MODIFICATION_DATE" TIMESTAMP
);

-- TABLE AVATAR
DROP SEQUENCE IF EXISTS SEQ_AVATAR;
CREATE SEQUENCE SEQ_AVATAR INCREMENT 1 MINVALUE 1 START 1;
CREATE TABLE IF NOT EXISTS "AVATAR" (
  "AVATAR_ID" INTEGER PRIMARY KEY DEFAULT NEXTVAL('SEQ_AVATAR'),
  "USER_ID" INTEGER REFERENCES "USER"("USER_ID"),
  "BYTES" BYTEA NOT NULL,
  "CREATION_DATE" TIMESTAMP NOT NULL,
  "MODIFICATION_DATE" TIMESTAMP
);


-- TABLE SETTINGS
DROP SEQUENCE IF EXISTS SEQ_SETTINGS;
CREATE SEQUENCE SEQ_SETTINGS INCREMENT 1 MINVALUE 1 START 1;
CREATE TABLE IF NOT EXISTS "SETTINGS" (
  "SETTINGS_ID" INTEGER PRIMARY KEY DEFAULT NEXTVAL('SEQ_SETTINGS'),
  "USER_ID" INTEGER REFERENCES "USER"("USER_ID"),
  "NOTIFICATION" VARCHAR(10),
  "CREATION_DATE" TIMESTAMP NOT NULL,
  "MODIFICATION_DATE" TIMESTAMP
);


-- TABLE CHANNEL
DROP SEQUENCE IF EXISTS SEQ_CHANNEL;
CREATE SEQUENCE SEQ_CHANNEL INCREMENT 1 MINVALUE 1 START 1;
CREATE TABLE IF NOT EXISTS "CHANNEL" (
  "CHANNEL_ID" INTEGER PRIMARY KEY DEFAULT NEXTVAL('SEQ_CHANNEL'),
  "USER_ID" INTEGER REFERENCES "USER"("USER_ID"),
  "TYPE" VARCHAR(20),       -- facebook, twitter, mychat etc.
  "TYPE_ID" VARCHAR(20),    -- facebook id, twitter id, mychat id etc.
  "CREATION_DATE" TIMESTAMP NOT NULL
);


-- TABLE LOG
DROP SEQUENCE IF EXISTS SEQ_LOG;
CREATE SEQUENCE SEQ_LOG INCREMENT 1 MINVALUE 1 START 1;
CREATE TABLE IF NOT EXISTS "LOG" (
  "LOG_ID" INTEGER PRIMARY KEY DEFAULT NEXTVAL('SEQ_LOG'),
  "LOG_TYPE" VARCHAR(50) NOT NULL,
  "CREATION_DATE" TIMESTAMP NOT NULL,
  "LOG_TYPE_ID" INTEGER NOT NULL,
  "LOG_MESSAGE" VARCHAR(100) NOT NULL
);


-- TABLE APPLICATION
DROP SEQUENCE IF EXISTS SEQ_APPLICATION;
CREATE SEQUENCE SEQ_APPLICATION INCREMENT 1 MINVALUE 1 START 1;
CREATE TABLE IF NOT EXISTS "APPLICATION" (
  "APPLICATION_ID" INTEGER PRIMARY KEY DEFAULT NEXTVAL('SEQ_APPLICATION'),
  "NAME" VARCHAR(50) NOT NULL,
  "DESCRIPTION" VARCHAR(100),
  "KEY" VARCHAR(100) NOT NULL
)



